#summary How to use FaZend in your Zend projects
#labels Featured

= Configuration of Repository =

Your project structure should be like this (full example in /directory-structure):

{{{
/branches
/tags
/trunk
  /php
    build.properties
    build.xml
    /src
      /application
      /library
      /public
}}}

Then do this ("vi" on Linux machine, "notepad" on Windows):

{{{
svn co svn://yourserver/yourproject test
svn propedit svn:externals test/trunk/php/src/library --editor-cmd=vi
}}}

In the file opened for edit add these two lines:

{{{
Zend http://framework.zend.com/svn/framework/standard/branches/release-1.8/library/Zend
FaZend http://fazend.googlecode.com/svn/trunk/FaZend
}}}

Use this URL instead if you want to get Zend from trunk (latest version):

{{{
Zend http://framework.zend.com/svn/framework/standard/trunk/library/Zend
}}}

Save the file and do this:

{{{
svn commit test -m "svn:externals properly set"
rm -rf test
}}}

== Phing build.xml ==

Add this to your build.xml:

{{{
<target name="deploy" description="Copy working files to FTP">
  <svnlastrevision
    workingcopy="${project.basedir}"
    propertyname="svn.revision" />
  <echo msg="${svn.revision}"
        file="${project.basedir}/${srcdir}/application/deploy/subversion/revision.txt" />	
  <taskdef name="uploadByFTP" classname="src.library.FaZend.UploadByFTP" />
  <uploadByFTP server="${ftp.server}"
    username="${ftp.user}"
    password="${ftp.password}"
    srcdir="${project.basedir}/${ftp.srcdir}"
    destdir="${ftp.destdir}">
  </uploadByFTP>
</target>
}}}

== Automatic Deployment ==

Now you do this regularly (in continuous integration cycle):

{{{
svn up
phing deploy
}}}

And your product will be automatically assembled from:

# your code
# Zend framework (v1.8 in this example)
# FaZend classes

It will be assembled and uploaded by FTP to your hosting (we assume that you use shared hosting, as a clever boy :)