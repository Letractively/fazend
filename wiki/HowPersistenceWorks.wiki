#summary How `FaZend_POS` is implemented
#labels Phase-Implementation

= Database Schema =

There are 4 tables in the database (SQL available at `FaZend/POS/database/*.sql`):

 * `fzObject`: collection of all persistent objects
 * `fzPartOf`: collection of ''part-of'' relations between objects
 * `fzSnapshot`: collection of momentary values of objects
 * `fzApproval`: collection of approval requests

= Sample Scenarios =

== Creating a New Object ==

You do this in PHP:

{{{
$root = FaZend_POS::root();
$root->cars = new FaZend_POS_Array();
}}}

The database gets this data:

{{{
fzObject {id: 1, class: 'FaZend_POS_Array'}
}}}

== Building Relations Between Objects ==

PHP code:

{{{
$bmw = new Car();
$root->cars['my car'] = $bmw;
}}}

In database:

{{{
fzObject {id: 2, class: 'Car'}
fzObject {id: 3, class: 'FaZend_POS_PartOf'}
fzPartOf {id: 1, name: 'my car', fzObject: 3, parent: 1, kid: 2}
}}}

== Setting Static PHP Properties of Objects ==

In PHP:

{{{
$bmw->color = 'black';
$bwm->model = 'bmw';
}}}

In database:

{{{
fzSnapshot {id: 1, 
    fzObject: 2, 
    version: 1, 
    properties: {color: 'black', model: 'bmw'},
    alive: 1,
    updated: '15-July-2009',
    user: NULL,
    comment: '',
    baselined: NULL}
}}}

== Changing Relations Between Objects ==

In PHP:

{{{
$audi = new Car();
$root->cars['my car'] = $audi;
}}}

In database:

{{{
fzObject {id: 4, class: 'Car'}
fzObject {id: 5, class: 'FaZend_POS_PartOf'}
fzPartOf {id: 2, name: 'my car', fzObject: 5, parent: 1, kid: 4}
fzSnapshot {id: 2, fzObject: 3, version: 1, alive: 0, ...}
}}}

== Changing Static PHP Properties of Objects ==

In PHP:

{{{
$bmw->color = 'blue';
}}}

In database:

{{{
fzSnapshot {id: 3, 
    fzObject: 2, 
    version: 2, 
    properties: {color: 'blue'}, ...}
}}}
