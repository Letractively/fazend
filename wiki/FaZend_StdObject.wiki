#summary "Standard Objects" FaZend PHP convention

= Global parent class FaZend_StdObject =

Any class that is inherited from `FaZend_StdObject` can:

 * behave like an array
 * provide access to its methods through variable-like shortcuts
 * implement validators for properties
 * cache internal calculation of getters
 * provide fluent-style accessors to its properties

For example, you create new class:

{{{
class Garage extends FaZend_StdObject 
    implements FaZend_StdObject_Cache_space // you want this class to automatically cache $this->_space
{

    protected $_address; // string address of the garage
    protected function _getSpace() {
        return $this->_howMuchEmptySpaceIsAvailable(); // calculation takes time and should be cached
    }
    protected function _validateTotalSpace($cars) {
        validate()
            ->type('integer', $cars, 'Total amount of car spaces should be integer only')
            ->true($cars > 0, 'Total amount of spaces should be positive')
            ->true($cars < 600, 'Total amount should be smaller than 600');
    }
}
}}}

Now you can use this object:

$garage = Garage::create()
    ->setTotalSpace(40);
$space = $garage->space;
$garage[13] = new Car();
}}}